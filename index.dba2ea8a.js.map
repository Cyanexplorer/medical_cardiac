{"mappings":"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","sources":["Documents/NetBeansProjects/CTModelWeb/web/js/utilities.js"],"sourcesContent":["//constant\r\nconst axisXY = 1\r\nconst axisXZ = 0\r\nconst axisYZ = 2\r\nconst axisUD = 1\r\nconst axisUV = 0\r\nconst axisVD = 2\r\nconst NONE = -1;\r\nconst WAIT = 0;\r\nconst GEN = 1;\r\nconst clpPlaneXY = 'CLPPLAINXY'\r\nconst clpPlaneXZ = 'CLPPLAINXZ'\r\nconst clpPlaneYZ = 'CLPPLAINYZ'\r\n\r\n//model id\r\nconst CARDIAC_MESH = \"cardiac_mesh\"\r\nconst CARDIAC_VOLUME = \"cardiac_volume\"\r\n\r\n//general function\r\nvar checkPassiveSupported = (option) => {\r\n    var supported = option\r\n    try {\r\n        var options = Object.defineProperty({}, \"passive\", {\r\n            get: function () {\r\n                supported = {passive: option}\r\n            }\r\n        })\r\n        window.addEventListener('test', null, options)\r\n    } catch (e) {\r\n    }\r\n\r\n    return supported\r\n}\r\n\r\nvar copyArray = function (dims, buffer) {\r\n    var dataBuffer = []\r\n    var volDims = [dims[0], dims[1], dims[2]]\r\n    for (var i = 0; i < buffer.length; i++) {\r\n        dataBuffer.push(buffer[i])\r\n    }\r\n\r\n    return [volDims, dataBuffer]\r\n}\r\n\r\nlet getMousePos = (canvas, evt) => {\r\n    let rect = canvas.getBoundingClientRect()\r\n    let scaleX = (evt.clientX - rect.left) * (canvas.width / rect.width)\r\n    let scaleY = (evt.clientY - rect.top) * (canvas.height / rect.height)\r\n    let intX = parseInt(scaleX)\r\n    let intY = parseInt(scaleY)\r\n    return [intX, intY]\r\n}\r\n\r\nlet getMinMax = function (dataBuffer) {\r\n    let min = dataBuffer[0]\r\n    let max = dataBuffer[0]\r\n    for (let i = 0; i < dataBuffer.length; i++) {\r\n        if (dataBuffer[i] > max) {\r\n            max = dataBuffer[i]\r\n        }\r\n        if (dataBuffer[i] < min) {\r\n            min = dataBuffer[i]\r\n        }\r\n    }\r\n\r\n    return {min: min, max: max}\r\n}\r\n\r\nlet sampling = function (volDims, dataBuffer, ratio) {\r\n    let index = 0\r\n    let i, j, k\r\n    let buffer = []\r\n    let dims = []\r\n\r\n    for (i = 0; i < volDims[2]; i += ratio)\r\n        for (j = 0; j < volDims[1]; j += ratio)\r\n            for (k = 0; k < volDims[0]; k += ratio) {\r\n                index = Math.ceil(i) * volDims[1] * volDims[0] + Math.ceil(j) * volDims[0] + Math.ceil(k)\r\n                buffer.push(dataBuffer[index]);\r\n            }\r\n\r\n    dims.push(k / ratio, j / ratio, i / ratio)\r\n\r\n    return {dims, buffer}\r\n}\r\n\r\nlet hex2rgb = function (hex) {\r\n    let r = ((hex >> 16) & 255)\r\n    let g = ((hex >> 8) & 255)\r\n    let b = ((hex) & 255)\r\n    return [r, g, b]\r\n}\r\n\r\n//lower call back frequency\r\nlet throttle = function (func, threshhold) {\r\n    let last, timer;\r\n    if (threshhold == null)\r\n        threshhold = 250;\r\n    return function () {\r\n        let context = this\r\n        let args = arguments\r\n        let now = +new Date()\r\n        if (last && now < last + threshhold) {\r\n            clearTimeout(timer)\r\n            timer = setTimeout(function () {\r\n                last = now\r\n                func.apply(context, args)\r\n            }, threshhold)\r\n        } else {\r\n            last = now\r\n            func.apply(context, args)\r\n        }\r\n    }\r\n}\r\n\r\nlet pushData = (source, destination, resize = false) => {\r\n\r\n    if (resize && source.length !== destination.length) {\r\n        destination = source.slice();\r\n        return;\r\n    }\r\n\r\n    let step = source.length == destination.length ? 1 : source.length / destination.length;\r\n    let si = 0;\r\n    for (let i = 0; i < destination.length; i++) {\r\n        destination[i] = source[Math.round(si)];\r\n        si += step;\r\n    }\r\n    //console.log(destination, source);\r\n\r\n};\r\n\r\nlet writerScalar = (data) => {\r\n    if (data instanceof Uint16Array) {\r\n        return 255;\r\n    } else if (data instanceof Uint8Array) {\r\n        return 1;\r\n    } else {\r\n        return -1;\r\n    }\r\n};\r\n\r\nlet loaderScalar = (data) => {\r\n    if (data instanceof Uint16Array) {\r\n        return 1 / 255\r\n    } else if (data instanceof Uint8Array) {\r\n        return 1\r\n    } else {\r\n        return -1\r\n    }\r\n}\r\n\r\nlet getDataRange = (data) => {\r\n    if (data instanceof Uint16Array) {\r\n        return 65536\r\n    } else if (data instanceof Uint8Array) {\r\n        return 256\r\n    }\r\n\r\n    return -1\r\n}\r\n\r\n"],"names":["axisXY","axisXZ","axisYZ","axisUD","axisUV","axisVD","NONE","WAIT","GEN","clpPlaneXY","clpPlaneXZ","clpPlaneYZ","CARDIAC_MESH","CARDIAC_VOLUME","checkPassiveSupported","option","supported","options","Object","defineProperty","get","passive","window","addEventListener","e","copyArray","dims","buffer","dataBuffer","volDims","i","length","push","getMousePos","canvas","evt","rect","getBoundingClientRect","scaleX","clientX","left","width","scaleY","clientY","top","height","parseInt","getMinMax","min","max","sampling","ratio","j","k","index","Math","ceil","hex2rgb","hex","throttle","func","threshhold","last","timer","context","this","args","arguments","now","Date","clearTimeout","setTimeout","apply","pushData","source","destination","resize","slice","step","si","round","writerScalar","data","Uint16Array","Uint8Array","loaderScalar","getDataRange"],"version":3,"file":"index.dba2ea8a.js.map"}